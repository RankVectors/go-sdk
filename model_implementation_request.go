/*
RankVectors API

Intelligent internal linking optimization API using AI.   RankVectors helps you automatically discover and implement optimal internal links  across your website to improve SEO performance and user experience.  ## Key Features - **AI-Powered Analysis**: Uses OpenAI embeddings to find optimal linking opportunities - **Smart Crawling**: Automatically crawls and analyzes your website content - **Automated Implementation**: Implement links via webhooks or manual instructions - **Credit-Based System**: Pay-per-use model with transparent pricing - **Multi-Platform Support**: Works with any CMS or platform via REST API  ## Getting Started 1. Create a project with your website URL 2. Start a crawl to analyze your content 3. Generate AI-powered link suggestions 4. Implement suggestions via API or webhook 5. Track performance and manage credits  ## Authentication All API endpoints require authentication using your RankVectors API key. Include your API key in the `Authorization` header: ``` Authorization: Bearer YOUR_API_KEY ```  Get your API key from your RankVectors dashboard: Settings â†’ API Keys 

API version: 1.2.0
Contact: support@rankvectors.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rankvectors

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ImplementationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImplementationRequest{}

// ImplementationRequest struct for ImplementationRequest
type ImplementationRequest struct {
	// Array of suggestion IDs to implement
	SuggestionIds []string `json:"suggestionIds"`
	// Platform type
	Platform string `json:"platform"`
	Credentials CustomCredentials `json:"credentials"`
	// Skip content change detection
	SkipContentVerification *bool `json:"skipContentVerification,omitempty"`
	// Implementation method
	ImplementationMethod *string `json:"implementationMethod,omitempty"`
}

type _ImplementationRequest ImplementationRequest

// NewImplementationRequest instantiates a new ImplementationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImplementationRequest(suggestionIds []string, platform string, credentials CustomCredentials) *ImplementationRequest {
	this := ImplementationRequest{}
	this.SuggestionIds = suggestionIds
	this.Platform = platform
	this.Credentials = credentials
	var skipContentVerification bool = false
	this.SkipContentVerification = &skipContentVerification
	var implementationMethod string = "api"
	this.ImplementationMethod = &implementationMethod
	return &this
}

// NewImplementationRequestWithDefaults instantiates a new ImplementationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImplementationRequestWithDefaults() *ImplementationRequest {
	this := ImplementationRequest{}
	var skipContentVerification bool = false
	this.SkipContentVerification = &skipContentVerification
	var implementationMethod string = "api"
	this.ImplementationMethod = &implementationMethod
	return &this
}

// GetSuggestionIds returns the SuggestionIds field value
func (o *ImplementationRequest) GetSuggestionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SuggestionIds
}

// GetSuggestionIdsOk returns a tuple with the SuggestionIds field value
// and a boolean to check if the value has been set.
func (o *ImplementationRequest) GetSuggestionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuggestionIds, true
}

// SetSuggestionIds sets field value
func (o *ImplementationRequest) SetSuggestionIds(v []string) {
	o.SuggestionIds = v
}

// GetPlatform returns the Platform field value
func (o *ImplementationRequest) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *ImplementationRequest) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *ImplementationRequest) SetPlatform(v string) {
	o.Platform = v
}

// GetCredentials returns the Credentials field value
func (o *ImplementationRequest) GetCredentials() CustomCredentials {
	if o == nil {
		var ret CustomCredentials
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *ImplementationRequest) GetCredentialsOk() (*CustomCredentials, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *ImplementationRequest) SetCredentials(v CustomCredentials) {
	o.Credentials = v
}

// GetSkipContentVerification returns the SkipContentVerification field value if set, zero value otherwise.
func (o *ImplementationRequest) GetSkipContentVerification() bool {
	if o == nil || IsNil(o.SkipContentVerification) {
		var ret bool
		return ret
	}
	return *o.SkipContentVerification
}

// GetSkipContentVerificationOk returns a tuple with the SkipContentVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationRequest) GetSkipContentVerificationOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipContentVerification) {
		return nil, false
	}
	return o.SkipContentVerification, true
}

// HasSkipContentVerification returns a boolean if a field has been set.
func (o *ImplementationRequest) HasSkipContentVerification() bool {
	if o != nil && !IsNil(o.SkipContentVerification) {
		return true
	}

	return false
}

// SetSkipContentVerification gets a reference to the given bool and assigns it to the SkipContentVerification field.
func (o *ImplementationRequest) SetSkipContentVerification(v bool) {
	o.SkipContentVerification = &v
}

// GetImplementationMethod returns the ImplementationMethod field value if set, zero value otherwise.
func (o *ImplementationRequest) GetImplementationMethod() string {
	if o == nil || IsNil(o.ImplementationMethod) {
		var ret string
		return ret
	}
	return *o.ImplementationMethod
}

// GetImplementationMethodOk returns a tuple with the ImplementationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationRequest) GetImplementationMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ImplementationMethod) {
		return nil, false
	}
	return o.ImplementationMethod, true
}

// HasImplementationMethod returns a boolean if a field has been set.
func (o *ImplementationRequest) HasImplementationMethod() bool {
	if o != nil && !IsNil(o.ImplementationMethod) {
		return true
	}

	return false
}

// SetImplementationMethod gets a reference to the given string and assigns it to the ImplementationMethod field.
func (o *ImplementationRequest) SetImplementationMethod(v string) {
	o.ImplementationMethod = &v
}

func (o ImplementationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImplementationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["suggestionIds"] = o.SuggestionIds
	toSerialize["platform"] = o.Platform
	toSerialize["credentials"] = o.Credentials
	if !IsNil(o.SkipContentVerification) {
		toSerialize["skipContentVerification"] = o.SkipContentVerification
	}
	if !IsNil(o.ImplementationMethod) {
		toSerialize["implementationMethod"] = o.ImplementationMethod
	}
	return toSerialize, nil
}

func (o *ImplementationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"suggestionIds",
		"platform",
		"credentials",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImplementationRequest := _ImplementationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImplementationRequest)

	if err != nil {
		return err
	}

	*o = ImplementationRequest(varImplementationRequest)

	return err
}

type NullableImplementationRequest struct {
	value *ImplementationRequest
	isSet bool
}

func (v NullableImplementationRequest) Get() *ImplementationRequest {
	return v.value
}

func (v *NullableImplementationRequest) Set(val *ImplementationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImplementationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImplementationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImplementationRequest(val *ImplementationRequest) *NullableImplementationRequest {
	return &NullableImplementationRequest{value: val, isSet: true}
}

func (v NullableImplementationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImplementationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


