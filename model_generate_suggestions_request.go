/*
RankVectors API

Intelligent internal linking optimization API using AI.   RankVectors helps you automatically discover and implement optimal internal links  across your website to improve SEO performance and user experience.  ## Key Features - **AI-Powered Analysis**: Uses OpenAI embeddings to find optimal linking opportunities - **Smart Crawling**: Automatically crawls and analyzes your website content - **Automated Implementation**: Implement links via webhooks or manual instructions - **Credit-Based System**: Pay-per-use model with transparent pricing - **Multi-Platform Support**: Works with any CMS or platform via REST API  ## Getting Started 1. Create a project with your website URL 2. Start a crawl to analyze your content 3. Generate AI-powered link suggestions 4. Implement suggestions via API or webhook 5. Track performance and manage credits  ## Authentication All API endpoints require authentication using your RankVectors API key. Include your API key in the `Authorization` header: ``` Authorization: Bearer YOUR_API_KEY ```  Get your API key from your RankVectors dashboard: Settings â†’ API Keys 

API version: 1.2.0
Contact: support@rankvectors.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rankvectors

import (
	"encoding/json"
)

// checks if the GenerateSuggestionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateSuggestionsRequest{}

// GenerateSuggestionsRequest struct for GenerateSuggestionsRequest
type GenerateSuggestionsRequest struct {
	// Minimum relevance score for suggestions
	MinRelevanceScore *float32 `json:"minRelevanceScore,omitempty"`
}

// NewGenerateSuggestionsRequest instantiates a new GenerateSuggestionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateSuggestionsRequest() *GenerateSuggestionsRequest {
	this := GenerateSuggestionsRequest{}
	return &this
}

// NewGenerateSuggestionsRequestWithDefaults instantiates a new GenerateSuggestionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateSuggestionsRequestWithDefaults() *GenerateSuggestionsRequest {
	this := GenerateSuggestionsRequest{}
	return &this
}

// GetMinRelevanceScore returns the MinRelevanceScore field value if set, zero value otherwise.
func (o *GenerateSuggestionsRequest) GetMinRelevanceScore() float32 {
	if o == nil || IsNil(o.MinRelevanceScore) {
		var ret float32
		return ret
	}
	return *o.MinRelevanceScore
}

// GetMinRelevanceScoreOk returns a tuple with the MinRelevanceScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateSuggestionsRequest) GetMinRelevanceScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.MinRelevanceScore) {
		return nil, false
	}
	return o.MinRelevanceScore, true
}

// HasMinRelevanceScore returns a boolean if a field has been set.
func (o *GenerateSuggestionsRequest) HasMinRelevanceScore() bool {
	if o != nil && !IsNil(o.MinRelevanceScore) {
		return true
	}

	return false
}

// SetMinRelevanceScore gets a reference to the given float32 and assigns it to the MinRelevanceScore field.
func (o *GenerateSuggestionsRequest) SetMinRelevanceScore(v float32) {
	o.MinRelevanceScore = &v
}

func (o GenerateSuggestionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateSuggestionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinRelevanceScore) {
		toSerialize["minRelevanceScore"] = o.MinRelevanceScore
	}
	return toSerialize, nil
}

type NullableGenerateSuggestionsRequest struct {
	value *GenerateSuggestionsRequest
	isSet bool
}

func (v NullableGenerateSuggestionsRequest) Get() *GenerateSuggestionsRequest {
	return v.value
}

func (v *NullableGenerateSuggestionsRequest) Set(val *GenerateSuggestionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateSuggestionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateSuggestionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateSuggestionsRequest(val *GenerateSuggestionsRequest) *NullableGenerateSuggestionsRequest {
	return &NullableGenerateSuggestionsRequest{value: val, isSet: true}
}

func (v NullableGenerateSuggestionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateSuggestionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


