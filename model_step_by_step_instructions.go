/*
RankVectors API

Intelligent internal linking optimization API using AI.   RankVectors helps you automatically discover and implement optimal internal links  across your website to improve SEO performance and user experience.  ## Key Features - **AI-Powered Analysis**: Uses OpenAI embeddings to find optimal linking opportunities - **Smart Crawling**: Automatically crawls and analyzes your website content - **Automated Implementation**: Implement links via webhooks or manual instructions - **Credit-Based System**: Pay-per-use model with transparent pricing - **Multi-Platform Support**: Works with any CMS or platform via REST API  ## Getting Started 1. Create a project with your website URL 2. Start a crawl to analyze your content 3. Generate AI-powered link suggestions 4. Implement suggestions via API or webhook 5. Track performance and manage credits  ## Authentication All API endpoints require authentication using your RankVectors API key. Include your API key in the `Authorization` header: ``` Authorization: Bearer YOUR_API_KEY ```  Get your API key from your RankVectors dashboard: Settings â†’ API Keys 

API version: 1.2.0
Contact: support@rankvectors.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rankvectors

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StepByStepInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StepByStepInstructions{}

// StepByStepInstructions struct for StepByStepInstructions
type StepByStepInstructions struct {
	// Step-by-step instructions
	Steps []string `json:"steps"`
	// HTML example of the implementation
	HtmlExample string `json:"htmlExample"`
}

type _StepByStepInstructions StepByStepInstructions

// NewStepByStepInstructions instantiates a new StepByStepInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStepByStepInstructions(steps []string, htmlExample string) *StepByStepInstructions {
	this := StepByStepInstructions{}
	this.Steps = steps
	this.HtmlExample = htmlExample
	return &this
}

// NewStepByStepInstructionsWithDefaults instantiates a new StepByStepInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStepByStepInstructionsWithDefaults() *StepByStepInstructions {
	this := StepByStepInstructions{}
	return &this
}

// GetSteps returns the Steps field value
func (o *StepByStepInstructions) GetSteps() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *StepByStepInstructions) GetStepsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *StepByStepInstructions) SetSteps(v []string) {
	o.Steps = v
}

// GetHtmlExample returns the HtmlExample field value
func (o *StepByStepInstructions) GetHtmlExample() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlExample
}

// GetHtmlExampleOk returns a tuple with the HtmlExample field value
// and a boolean to check if the value has been set.
func (o *StepByStepInstructions) GetHtmlExampleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlExample, true
}

// SetHtmlExample sets field value
func (o *StepByStepInstructions) SetHtmlExample(v string) {
	o.HtmlExample = v
}

func (o StepByStepInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StepByStepInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["steps"] = o.Steps
	toSerialize["htmlExample"] = o.HtmlExample
	return toSerialize, nil
}

func (o *StepByStepInstructions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"steps",
		"htmlExample",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStepByStepInstructions := _StepByStepInstructions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStepByStepInstructions)

	if err != nil {
		return err
	}

	*o = StepByStepInstructions(varStepByStepInstructions)

	return err
}

type NullableStepByStepInstructions struct {
	value *StepByStepInstructions
	isSet bool
}

func (v NullableStepByStepInstructions) Get() *StepByStepInstructions {
	return v.value
}

func (v *NullableStepByStepInstructions) Set(val *StepByStepInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableStepByStepInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableStepByStepInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStepByStepInstructions(val *StepByStepInstructions) *NullableStepByStepInstructions {
	return &NullableStepByStepInstructions{value: val, isSet: true}
}

func (v NullableStepByStepInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStepByStepInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


