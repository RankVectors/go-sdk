/*
RankVectors API

Intelligent internal linking optimization API using AI.   RankVectors helps you automatically discover and implement optimal internal links  across your website to improve SEO performance and user experience.  ## Key Features - **AI-Powered Analysis**: Uses OpenAI embeddings to find optimal linking opportunities - **Smart Crawling**: Automatically crawls and analyzes your website content - **Automated Implementation**: Implement links via webhooks or manual instructions - **Credit-Based System**: Pay-per-use model with transparent pricing - **Multi-Platform Support**: Works with any CMS or platform via REST API  ## Getting Started 1. Create a project with your website URL 2. Start a crawl to analyze your content 3. Generate AI-powered link suggestions 4. Implement suggestions via API or webhook 5. Track performance and manage credits  ## Authentication All API endpoints require authentication using your RankVectors API key. Include your API key in the `Authorization` header: ``` Authorization: Bearer YOUR_API_KEY ```  Get your API key from your RankVectors dashboard: Settings â†’ API Keys 

API version: 1.2.0
Contact: support@rankvectors.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rankvectors

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddCreditsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCreditsRequest{}

// AddCreditsRequest struct for AddCreditsRequest
type AddCreditsRequest struct {
	// Number of credits to add
	Amount float32 `json:"amount"`
	// Source of credits
	Source *string `json:"source,omitempty"`
}

type _AddCreditsRequest AddCreditsRequest

// NewAddCreditsRequest instantiates a new AddCreditsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCreditsRequest(amount float32) *AddCreditsRequest {
	this := AddCreditsRequest{}
	this.Amount = amount
	var source string = "manual_addition"
	this.Source = &source
	return &this
}

// NewAddCreditsRequestWithDefaults instantiates a new AddCreditsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCreditsRequestWithDefaults() *AddCreditsRequest {
	this := AddCreditsRequest{}
	var source string = "manual_addition"
	this.Source = &source
	return &this
}

// GetAmount returns the Amount field value
func (o *AddCreditsRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *AddCreditsRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *AddCreditsRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *AddCreditsRequest) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCreditsRequest) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *AddCreditsRequest) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *AddCreditsRequest) SetSource(v string) {
	o.Source = &v
}

func (o AddCreditsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCreditsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	return toSerialize, nil
}

func (o *AddCreditsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddCreditsRequest := _AddCreditsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddCreditsRequest)

	if err != nil {
		return err
	}

	*o = AddCreditsRequest(varAddCreditsRequest)

	return err
}

type NullableAddCreditsRequest struct {
	value *AddCreditsRequest
	isSet bool
}

func (v NullableAddCreditsRequest) Get() *AddCreditsRequest {
	return v.value
}

func (v *NullableAddCreditsRequest) Set(val *AddCreditsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCreditsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCreditsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCreditsRequest(val *AddCreditsRequest) *NullableAddCreditsRequest {
	return &NullableAddCreditsRequest{value: val, isSet: true}
}

func (v NullableAddCreditsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCreditsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


